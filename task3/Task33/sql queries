SQL Lesson 1: SELECT queries 101.
Ex1:-

1) Find the title of each film:
Ans: Select title From movies;

2) Find the director of each film:
Ans: Select director From movies;

3) Find the title and director of each film:
Ans: Select title,director From movies;

4) Find the title and year of each film:
Ans: Select title, year From  movies;

5) Find all the information about each film:
Ans: Select * From movies;

SQL Lesson 2: Queries with constraints.
Ex2:-

1) Find the movie with a row id of 6:
Ans: SELECT title FROM movies WHERE id = 6;

2) Find the movies released in the years between 2000 and 2010:
Ans: SELECT title FROM movies WHERE year BETWEEN 2000 AND 2010;

3) Find the movies not released in the years between 2000 and 2010:
Ans: SELECT title FROM movie WHERE year NOT BETWEEN 2000 and 2010;

4) Find the first 5 Pixar movies and their release year:
Ans: SELECT title, year FROM movies WHERE year <= 2003;

SQL Lesson 3: Queries with constraints.
Ex3:-

1) Find all the Toy Story movies:
Ans: SELECT title FROM movies WHERE title LIKE 'Toy Story%';

2) Find all the movies directed by John Lasseter:
Ans: SELECT title FROM movies WHERE director = 'John Lasseter';

3) Find all the movies (and director) not directed by John Lasseter:
Ans: SELECT title FROM movies WHERE director != 'John Lasseter';

4) Find all the WALL-* movies:
SELECT title FROM movies WHERE title LIKE 'WALL-%';

SQL Lesson 4: Filtering and sorting Query results.
Ex4:-

1) List all directors of Pixar movies (alphabetically), without duplicates:
Ans: SELECT DISTINCT director FROM movies ORDER BY director;

2) List the last four Pixar movies released (ordered from most recent to least).
Ans: SELECT title FROM movies ORDER BY year DESC LIMIT 4;

3) List the first five Pixar movies sorted alphabetically.
Ans: SELECT title FROM movies ORDER BY title LIMIT 5;

4) List the next five Pixar movies sorted alphabetically.
Ans: SELECT title FROM movies ORDER BY title LIMIT 5 OFFSET 5;

SQL Review: Simple SELECT Queries.
Ex5:-

1) List all the Canadian cities and their populations.
Ans: SELECT city, population FROM north_american_cities WHERE country = 'Canada';

2) Order all the cities in the United States by their latitude from north to south.
Ans: SELECT city FROM north_american_cities WHERE country = 'United States' ORDER BY latitude DESC;

3) List all the cities west of Chicago, ordered from west to east.
Ans: SELECT city FROM north_american_cities WHERE longitude < -87.629798 ORDER BY longitude;

4) List the two largest cities in Mexico (by population).
Ans: SELECT city FROM north_american_cities WHERE country = 'Mexico' ORDER BY population DESC LIMIT 2;

5) List the third and fourth largest cities (by population) in the United States and their population.
Ans: SELECT city, population FROM north_american_cities WHERE country = 'United States' ORDER BY population DESC LIMIT 2 OFFSET 2;


SQL Lesson 6: Multi-table queries with JOINs.
Ex6:-

1) Find the domestic and international sales for each movie.
Ans: SELECT title, domestic_sales, international_sales FROM boxoffice JOIN movies ON movie_id = movies.id;

2) Show the sales numbers for each movie that did better internationally rather than domestically.
Ans: SELECT title, domestic_sales, international_sales FROM boxoffice JOIN movies ON movie_id = movies.id
 WHERE international_sales > domestic_sales;

3) List all the movies by their ratings in descending order.
Ans: SELECT title, rating FROM movies JOIN boxoffice ON movies.id = movie_id ORDER BY rating DESC;

SQL Lesson 7: OUTER JOINs.
Ex7:-

1) Find the list of all buildings that have employees.
Ans: SELECT DISTINCT building FROM employees LEFT JOIN buildings ON building = building_name;

2) Find the list of all buildings and their capacity.
Ans: SELECT building_name, capacity FROM buildings;

3) List all buildings and the distinct employee roles in each building (including empty buildings).
Ans: SELECT DISTINCT building_name, role FROM buildings LEFT JOIN employees ON building = building_name;

SQL Lesson 8: A short note on NULLs.
Ex8:-

1) Find the name and role of all employees who have not been assigned to a building.
Ans: SELECT name, role FROM employees WHERE building IS NULL;

2) Find the names of the buildings that hold no employees.
Ans: SELECT DISTINCT building_name FROM buildings LEFT JOIN employees ON building_name = building
WHERE name IS NULL;

SQL Lesson 9: Queries with expressions.
Ex9:-

1) List all movies and their combined sales in millions of dollars.
Ans: SELECT title, (domestic_sales + international_sales) / 1000000 AS gross_sales FROM movies
JOIN boxoffice ON movies.id = boxoffice.movie_id;

2) List all movies and their ratings in percent.
Ans: SELECT title, rating * 10 AS rating_percent FROM movies JOIN boxoffice ON movies.id = boxoffice.movie_id;

3) List all movies that were released on even number years.
Ans: SELECT title FROM movies WHERE year % 2 = 0;




